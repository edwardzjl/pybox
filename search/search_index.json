{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"PyBox","text":"<p>PyBox manages Python code sandboxes and provides a clean interface for interacting with them. PyBox supports spawning sandboxes in both local and remote environments.</p> <p>There are two main abstractions, <code>pybox.base.BasePyBoxManager</code> and <code>pybox.base.BasePyBox</code>, The <code>PyBoxManager</code> is responsible for managing the lifecycle of the sandboxes, while the <code>PyBox</code> is responsible for executing code within the sandbox.</p>"},{"location":"#license","title":"License","text":"<p><code>pybox</code> is distributed under the terms of the Apache 2.0 license.</p>"},{"location":"quickstart/","title":"Quickstart","text":""},{"location":"quickstart/#installation","title":"Installation","text":"<p>You can easily install PyBox using pip:</p> <pre><code>python -m pip install pppybox\n</code></pre> <p>PyBox supports two types of Python sandbox environments: remote and local.</p> <ul> <li>Remote Sandbox: Requires access to a running Enterprise Gateway instance.</li> <li> <p>Local Sandbox: Requires additional dependencies, which can be installed with the following command:</p> <pre><code>python -m pip install pppybox[local]\n</code></pre> </li> </ul> <p>I recommend start from local sandbox and migrate to the remote sandbox when you are ready.</p>"},{"location":"quickstart/#spawning-local-sandboxes","title":"Spawning Local Sandboxes","text":"<p>To spawn local sandboxes, first create a <code>PyBoxManager</code> instance:</p> <pre><code>from pybox import LocalPyBoxManager\n\npybox_manager = LocalPyBoxManager()\n</code></pre>"},{"location":"quickstart/#with-context-manager","title":"With Context Manager","text":"<p>Then, use a context manager to spawn and interact with a local sandbox:</p> <pre><code>with pybox_manager.start() as box:\n    box.execute(\"print('Hello, World!')\")\n</code></pre> <p>It's recommended to use a context manager to ensure that the sandbox is properly cleaned up after use.</p>"},{"location":"quickstart/#without-context-manager","title":"Without Context Manager","text":"<pre><code>box = pybox_manager.start()\n...\npybox_manager.shutdown(box.kernel_id, now=True)\n</code></pre>"}]}